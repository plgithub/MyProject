apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':actionbarsherlock')
    compile files('../libs/so.jar')
    compile 'com.jakewharton:butterknife:5.1.1'
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "cn.pipi.mobile.pipiplayer.hd"
        minSdkVersion 11
        targetSdkVersion 22
        versionCode 20151019
        versionName "2.4.0"

        // dex突破65535的限制
        multiDexEnabled true
        // 默认是debug的渠道
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "debug"]
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        debug {
            storeFile file("../pipi_android.keystore")
        }

        release {
            storeFile file("../pipi_android.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"

            minifyEnabled false
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为pipi_player_v1.0_2015-01-15_wandoujia.apk
                        //def fileName = "pipi_player_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        def fileName = "pipi_hd_v${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    /*
    * gradlew clean
    * gradlew assembleRelease
    * 
    * */
    productFlavors {
        pipiweb {}
        s91 {}
        s91sp {}
        appchina {}
        wo {}
        mumayi {}
        myapp {}
        s360 {}
        xiaomi {}
        meizu {}
        s189 {}
        gfan {}
        wandoujia {}
        lenovo {}
        huawei {}
        samsung {}
        mmarket {}
        baidu {}
        googleplay {}
        anzhi {}
        nduoa {}
        sogou {}
        suning {}
        s3gandroid {}
        taobao {}
        zol {}
        s163 {}
        anzhuoapk {}
        lianlian {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
}
